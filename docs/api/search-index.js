var searchIndex = JSON.parse('{\
"flechasdb_s3":{"doc":"Amazon S3 extension for the FlechasDB system.","t":"AADDLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["asyncfs","syncfs","S3FileSystem","S3HashedFileIn","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","open_hashed_file","poll_read","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","S3FileSystem","S3HashedFileIn","S3HashedFileOut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_hashed_file","create_hashed_file_in","flush","from","from","from","into","into","into","new","open_hashed_file","persist","read","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","write"],"q":[[0,"flechasdb_s3"],[2,"flechasdb_s3::asyncfs"],[24,"flechasdb_s3::syncfs"]],"d":["Asynchronous implementation of <code>FileSystem</code> on Amazon S3.","Synchronous implementation of <code>FileSystem</code> on Amazon S3.","Asynchronous <code>FileSystem</code> on Amazon S3.","Readable file (object) in an S3 bucket.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>FileSystem</code> on Amazon S3.","","","","","","","","","","","","Synchronous <code>FileSystem</code> on Amazon S3.","Readable file (object) in an S3 bucket.","Writable file (object) in an S3 bucket.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>FileSystem</code> on Amazon S3.","","Uploads the contents to the S3 bucket.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,4,9,4,9,4,9,4,9,4,4,9,4,9,4,9,4,9,9,4,9,0,0,0,16,20,22,16,20,22,16,16,20,16,20,22,16,20,22,16,16,20,22,16,20,22,16,20,22,16,20,22,22,16,20,22,20],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[3,[2]],[3,[2]]],4],[[4,[0,[[3,[2]],5]]],[[8,[[7,[6]]]]]],[[[8,[9]],10,11],[[13,[12]]]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[9,[[8,[[7,[6]]]]]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[16,[[14,[17]]]],[[16,[19,[18]]],[[14,[17]]]],[20,12],[[]],[[]],[[]],[[]],[[]],[[]],[[21,1,[3,[2]],[3,[2]]],16],[[16,[19,[18]]],[[14,[17]]]],[[20,[19,[18]]],[[14,[2,17]]]],[[22,[24,[23]]],[[12,[25]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[22,[[14,[17]]]],[[]],[[]],[[]],[[20,[24,[23]]],[[12,[25]]]]],"c":[],"p":[[3,"SdkConfig"],[3,"String"],[8,"Into"],[3,"S3FileSystem"],[8,"Send"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"S3HashedFileIn"],[3,"Context"],[3,"ReadBuf"],[6,"Result"],[4,"Poll"],[4,"Result"],[3,"TypeId"],[3,"S3FileSystem"],[4,"Error"],[15,"str"],[8,"AsRef"],[3,"S3HashedFileOut"],[3,"Handle"],[3,"S3HashedFileIn"],[15,"u8"],[15,"slice"],[15,"usize"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
